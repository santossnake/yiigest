<?php

/**
 * This is the model base class for the table "tb_agenda_mov".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TbAgendaMov".
 *
 * Columns in table "tb_agenda_mov" available as properties of the model,
 * followed by relations of table "tb_agenda_mov" available as properties of the model.
 *
 * @property integer $id_agenda_mov
 * @property string $descricao
 * @property double $valor
 * @property string $prim_data
 * @property integer $conta_deb
 * @property integer $conta_cred
 * @property integer $entidade
 * @property integer $activo
 * @property integer $repeticao
 * @property string $ultima_cobranca
 * @property integer $user
 *
 * @property TbUsers $user0
 * @property TbContas $contaDeb
 * @property TbContas $contaCred
 * @property TbEntidade $entidade0
 * @property TbRepeticao $repeticao0
 */
abstract class BaseTbAgendaMov extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tb_agenda_mov';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Agenda Movimento|Agenda Movimentos', $n);
	}

	public static function representingColumn() {
		return 'descricao';
	}

	public function rules() {
		return array(
			array('conta_deb, conta_cred, entidade, activo, repeticao, user', 'numerical', 'integerOnly'=>true),
			array('valor', 'numerical'),
			array('descricao', 'length', 'max'=>255),
			array('prim_data, ultima_cobranca', 'safe'),
			array('descricao, valor, prim_data, conta_deb, conta_cred, entidade, activo, repeticao, ultima_cobranca, user', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_agenda_mov, descricao, valor, prim_data, conta_deb, conta_cred, entidade, activo, repeticao, ultima_cobranca, user', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user0' => array(self::BELONGS_TO, 'TbUsers', 'user'),
			'contaDeb' => array(self::BELONGS_TO, 'TbContas', 'conta_deb'),
			'contaCred' => array(self::BELONGS_TO, 'TbContas', 'conta_cred'),
			'entidade0' => array(self::BELONGS_TO, 'TbEntidade', 'entidade'),
			'repeticao0' => array(self::BELONGS_TO, 'TbRepeticao', 'repeticao'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_agenda_mov' => Yii::t('app', 'Id Agenda Mov'),
			'descricao' => Yii::t('app', 'Descricao'),
			'valor' => Yii::t('app', 'Valor'),
			'prim_data' => Yii::t('app', 'Prim Data'),
			'conta_deb' => null,
			'conta_cred' => null,
			'entidade' => null,
			'activo' => Yii::t('app', 'Activo'),
			'repeticao' => null,
			'ultima_cobranca' => Yii::t('app', 'Ultima Cobranca'),
			'user' => null,
			'user0' => null,
			'contaDeb' => null,
			'contaCred' => null,
			'entidade0' => null,
			'repeticao0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_agenda_mov', $this->id_agenda_mov);
		$criteria->compare('descricao', $this->descricao, true);
		$criteria->compare('valor', $this->valor);
		$criteria->compare('prim_data', $this->prim_data, true);
		$criteria->compare('conta_deb', $this->conta_deb);
		$criteria->compare('conta_cred', $this->conta_cred);
		$criteria->compare('entidade', $this->entidade);
		$criteria->compare('activo', $this->activo);
		$criteria->compare('repeticao', $this->repeticao);
		$criteria->compare('ultima_cobranca', $this->ultima_cobranca, true);
		$criteria->compare('user', $this->user);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}